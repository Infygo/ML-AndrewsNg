# Octave basic commands 

> Math operations 
> Logical operators - &&, ||, xor
> strings assignment 
> use of ; to avoid output getting printed 
> disp(sprint('2 decimal: %0.2f', a))
> format long, format short 
> Matrices , vector 
> slicing 
> ones, eye, zeros, rand, randn , hist(), help 
> clear 
------------------------------------------------

# Moving data 
> size , size(A,1), size(A,2)
> length(v)
> load 
> who , whos , save hello.mat v , save hello.txt v --ascii

# Manipulate data 
> A(3,2), A(2,:), A(:,2), A([1,3],:)
> A(:,2) = [10;11;12]
> A(:)
> C = [A B] - concatenate , [A;B]

--------------------------------------------------
# Computation in octave 
> multiplication matrix, element wise multiplication A*C, A.*B
> B.^2 - elementwise square 
> 1./v - element wise inverse 1/2 example 
> log(v), exp(v) , abs(v), -v 
> max(A) - returns the row incase of matrix, returns value in case of vector 
> [val, ind] = max(v) --- returns the value and indices in the vector 
> v < 3 -- returns 1/0 based on true or false 
> find(v<3) -- returns the values in the v which are < 3 
> magic(3) -- 3x3 matrix with sum of all rows/ columns/diag are the same 
> [r,c] = find(A>=7) --- returns rows and col positions of elements >=7 
> sum(a), prod(a), floor(a) -- removes the digits after decimal , ceil(a)- rounded up to higher 
> max(A,[],1) -- max of the col elements , max(A, [],2) -- max of the row elements 
> flipup , flipud
> pinv - pseudo inverse 

-----------------------------------------------------
# Plot the data 
> print -dpng 'filename.png'
> hold on 
> subplot(1,2,1) -- 1 row 2 col plot space - 1 st plot space 
> clf - clear as figure 
------------------------------------------------------
# control statements 
> for 
> while, break , continue 
> if elseif

# functions 
> create a file name with the function name with .m 
> optional -- addpath('C:\Users\Vrav\Desktop')
> function [y1, y2] = filename(x)
y1= x^2
y2= x^3 
